{"mappings":"AAAA,2BAA2B;AAC3B,kDAAkD;AAClD,oDAAoD;AAEpD,KAAK,eAAe;AAEpB,MAAM,SAAS,IAAI,iBAAiB;IAClC,IAAI,SAAS,cAAc;IAC3B,QAAQ;AACV;AAEA,2FAA2F;AAC3F,WAAW,GAAG,UAAU,cAAc;AAEtC,6HAA6H;AAC7H,cAAc,cAAc,kBAAkB;IAC5C,WAAU,KAAK;QACb,OAAO,UAAU,SACb,WAAW,SAAS,OAAO;YAAE,UAAU;YAAG,aAAa;QAAK,KAC5D,WAAW,OAAO,SAAS,OAAO;IACxC;IACA;QACE,OAAO;YACL,KAAK;YACL,MAAM;YACN,OAAO,OAAO;YACd,QAAQ,OAAO;QACjB;IACF;IACA,2EAA2E;IAC3E,sGAAsG;IACtG,wFAAwF;IACxF,2FAA2F;IAC3F,SAAS,SAAS,cAAc,kBAAkB,MAAM,YACpD,cACA;AACN;AACA,cAAc,iBAAiB,WAAW,IAAM,WAAW;AAC3D,cAAc,SAAS;IAAE,UAAU;AAAiB;AAEpD,cAAc,OAAO;IACnB,WAAW,KAAK,KAAK,qBAAqB;QACxC,GAAG;QACH,OAAO;QACP,UAAU;IACZ;IACA,OAAO;IACP,SAAS;IACT,YAAY;IACZ,OAAO;IACP,KAAK;AAEP;AAEA,kGAAkG;AAElG,cAAc","sources":["script.js"],"sourcesContent":["// import gsap from \"gsap\";\r\n// import ScrollTrigger from \"gsap/ScrollTrigger\";\r\n// import LocomotiveScroll from \"locomotive-scroll\";\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nconst scroll = new LocomotiveScroll({\r\n  el: document.querySelector(\".smooth-scroll\"),\r\n  smooth: true,\r\n});\r\n\r\n// each time Locomotive Scroll updates, tell ScrollTrigger to update too (sync positioning)\r\nlocoScroll.on(\"scroll\", ScrollTrigger.update);\r\n\r\n// tell ScrollTrigger to use these proxy methods for the \".smooth-scroll\" element since Locomotive Scroll is hijacking things\r\nScrollTrigger.scrollerProxy(\".smooth-scroll\", {\r\n  scrollTop(value) {\r\n    return arguments.length\r\n      ? locoScroll.scrollTo(value, { duration: 0, disableLerp: true })\r\n      : locoScroll.scroll.instance.scroll.y;\r\n  }, // we don't have to define a scrollLeft because we're only scrolling vertically.\r\n  getBoundingClientRect() {\r\n    return {\r\n      top: 0,\r\n      left: 0,\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n  },\r\n  // LocomotiveScroll handles things completely differently on mobile devices\r\n  // - it doesn't even transform the container at all! So to get the correct behavior and avoid jitters,\r\n  // we should pin things with position: fixed on mobile.We sense it by checking to see if\r\n  // there's a transform applied to the container(the LocomotiveScroll - controlled element).\r\n  pinType: document.querySelector(\".smooth-scroll\").style.transform\r\n    ? \"transform\"\r\n    : \"fixed\",\r\n});\r\nScrollTrigger.addEventListener(\"refresh\", () => locoScroll.update());\r\nScrollTrigger.defaults({ scroller: \".smooth-scroll\" });\r\n\r\nScrollTrigger.create({\r\n  animation: gsap.from(\".projects_paralax\", {\r\n    y: \"70vh\",\r\n    scale: 5,\r\n    yPercent: -50,\r\n  }),\r\n  scrub: true,\r\n  trigger: \".projects_container\",\r\n  endTrigger: \".projects_container\",\r\n  start: \"top 70%\",\r\n  end: \"top 20%\",\r\n  // markers: true,\r\n});\r\n\r\n// each time the window updates, we should refresh ScrollTrigger and then update LocomotiveScroll.\r\n\r\nScrollTrigger.refresh();\r\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}